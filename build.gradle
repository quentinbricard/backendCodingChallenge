buildscript {
	ext {
		springBootVersion = '1.4.3.RELEASE'
	}
	repositories {
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

war {
    archiveName = 'backendcodingchallenge.war'
	baseName = 'backendcodingchallenge'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
	jcenter()
}

configurations {
	providedRuntime
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'oauth.signpost:signpost-core:1.2.1.2'
	compile 'com.h2database:h2:1.4.193'
	compile 'com.google.guava:guava:20.0'
	compile 'org.springframework.security.oauth:spring-security-oauth:2.0.9.RELEASE'
	compile 'com.github.jsimone:webapp-runner:8.5.5.2'
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile 'org.powermock:powermock-mockito-release-full:1.6.4'
	
}

task stage() {
  dependsOn clean, war
}
tasks.stage.doLast() {
  delete fileTree(dir: "build/libs", exclude: "*.war")
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
  into "$buildDir/server"
  from(configurations.compile) {
    include "webapp-runner*"
  }
}

stage.dependsOn(copyToLib)